{"ast":null,"code":"import _slicedToArray from \"/home/oberon/Desktop/reactProject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oberon/Desktop/reactProject/src/Game.js\";\nimport React from 'react';\nimport './Game.css';\nimport Board from './components/Board/Board';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  } //by Mouse click on Square component\n\n\n  handleClick(i) {\n    //const history <= current state of squares array\n    const history = this.state.history; //\n\n    const current = history[history.length - 1]; //create copy of the squares array\n\n    const squares = this.state.squares.slice(); //ignoring a click if someone has won/square fild is filed\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } //assigne the xIsNext actual value to [i]- ellement of coppied array \n\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; //renew the state\n\n    this.setState({\n      history: history.concat([{\n        squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner \" + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/oberon/Desktop/reactProject/src/Game.js"],"names":["React","Board","Game","Component","constructor","props","state","history","squares","Array","fill","xIsNext","handleClick","i","current","length","slice","calculateWinner","setState","concat","render","winner","status","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Game.css';\nimport Board from './components/Board/Board'\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    }\n  }\n\n  //by Mouse click on Square component\n  handleClick(i) {\n    //const history <= current state of squares array\n    const history = this.state.history\n    //\n    const current = history[history.length - 1]\n    //create copy of the squares array\n    const squares = this.state.squares.slice()\n    //ignoring a click if someone has won/square fild is filed\n    if (calculateWinner(squares) || squares[i]) {\n        return;\n    }\n    //assigne the xIsNext actual value to [i]- ellement of coppied array \n    squares[i] = this.state.xIsNext ? 'X' : 'O'\n    //renew the state\n    this.setState({\n                    history: history.concat([{\n                      squares\n                    }]),\n                    xIsNext: !this.state.xIsNext})\n    \n}\n\n  render () {\n    const history = this.state.history\n    const current = history[history.length - 1]\n    const winner = calculateWinner(current.squares);\n\n    let status\n    if (winner) {\n        status = \"Winner \" + winner\n    }   else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    }\n\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board \n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className='game-info'>\n          <div>{status}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n  ]\n  for(let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i]\n      if (squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a]\n      }\n  }\n  return null\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}