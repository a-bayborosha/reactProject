{"ast":null,"code":"import _slicedToArray from \"/home/oberon/Desktop/reactProject/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/oberon/Desktop/reactProject/src/components/Board/Board.js\";\nimport React from 'react';\nimport Square from '../Square/Square';\nimport './Board.css';\n\nclass Board extends React.Component {\n  //by Mouse click on Square component\n  handleClick(i) {\n    //create copy of the squares array\n    const squares = this.state.squares.slice(); //ignoring a click if someone has won/square fild is filed\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    } //assigne the xIsNext actual value to [i]- ellement of coppied array \n\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; //renew the state\n\n    this.setState({\n      squares,\n      xIsNext: !this.state.xIsNext\n    });\n  } //rendering Square component\n\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner \" + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/oberon/Desktop/reactProject/src/components/Board/Board.js"],"names":["React","Square","Board","Component","handleClick","i","squares","state","slice","calculateWinner","xIsNext","setState","renderSquare","props","onClick","render","winner","status","lines","length","a","b","c"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAEhC;AACAC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACX;AACA,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,KAAnB,EAAhB,CAFW,CAGX;;AACA,QAAIC,eAAe,CAACH,OAAD,CAAf,IAA4BA,OAAO,CAACD,CAAD,CAAvC,EAA4C;AACxC;AACH,KANU,CAOX;;;AACAC,IAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKE,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAAxC,CARW,CASX;;AACA,SAAKC,QAAL,CAAc;AACEL,MAAAA,OADF;AAEEI,MAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAFvB,KAAd;AAIH,GAjB+B,CAmBhC;;;AACAE,EAAAA,YAAY,CAACP,CAAD,EAAI;AACZ,WAAO,oBAAC,MAAD;AACK,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWP,OAAX,CAAmBD,CAAnB,CADZ;AAEK,MAAA,OAAO,EAAE,MAAM,KAAKQ,KAAL,CAAWC,OAAX,CAAmBT,CAAnB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAIH;;AACDU,EAAAA,MAAM,GAAG;AACT,UAAMC,MAAM,GAAGP,eAAe,CAAC,KAAKF,KAAL,CAAWD,OAAZ,CAA9B;AACA,QAAIW,MAAJ;;AACA,QAAID,MAAJ,EAAY;AACRC,MAAAA,MAAM,GAAG,YAAYD,MAArB;AACH,KAFD,MAES;AACLC,MAAAA,MAAM,GAAG,mBAAmB,KAAKV,KAAL,CAAWG,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACH;;AAGG,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBO,MAAzB,CADJ,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAHJ,EASI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CATJ,EAeI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAfJ,CADJ;AAyBH;;AA7D+B;;AAgEpC,SAASH,eAAT,CAAyBH,OAAzB,EAAkC;AAC9B,QAAMY,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPU,EAQV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARU,CAAd;;AAUA,OAAI,IAAIb,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGa,KAAK,CAACC,MAAzB,EAAiCd,CAAC,EAAlC,EAAsC;AAAA,oCAChBa,KAAK,CAACb,CAAD,CADW;AAAA,UAC3Be,CAD2B;AAAA,UACxBC,CADwB;AAAA,UACrBC,CADqB;;AAElC,QAAIhB,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACe,CAAD,CAAtB,IAA6Bf,OAAO,CAACc,CAAD,CAAP,KAAed,OAAO,CAACgB,CAAD,CAAvD,EAA4D;AACxD,aAAOhB,OAAO,CAACc,CAAD,CAAd;AACH;AACJ;;AACD,SAAO,IAAP;AACH;;AAED,eAAelB,KAAf","sourcesContent":["import React from 'react'\nimport Square from '../Square/Square'\nimport './Board.css'\n\nclass Board extends React.Component {\n    \n    //by Mouse click on Square component\n    handleClick(i) {\n        //create copy of the squares array\n        const squares = this.state.squares.slice()\n        //ignoring a click if someone has won/square fild is filed\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        //assigne the xIsNext actual value to [i]- ellement of coppied array \n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        //renew the state\n        this.setState({\n                        squares,\n                        xIsNext: !this.state.xIsNext})\n        \n    }\n\n    //rendering Square component\n    renderSquare(i) {\n        return <Square \n                    value={this.props.squares[i]}\n                    onClick={() => this.props.onClick(i)}\n                />\n    }\n    render() {\n    const winner = calculateWinner(this.state.squares);\n    let status\n    if (winner) {\n        status = \"Winner \" + winner\n    }   else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\n    }\n    \n\n        return(\n            <div>\n                <div className='status'>{status}</div>\n\n                <div className='board-row'>\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n\n                <div className='board-row'>\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n\n                <div className='board-row'>\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n\n            </div>\n        \n        )\n    }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n    for(let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}